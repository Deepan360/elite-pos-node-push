<!DOCTYPE html>
<html lang="en">
<head>
    {{>header}}

    <style>
   #purchaseFormContainer {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #8f8f8f;
    padding: 20px;
    z-index: 1001; /* Ensure the popup is above the blurred background */
    border-radius: 10px;
}


.new-row {
        display: none;
    }
.input-field.product-name {
    width: 200px; /* Adjust the width as needed */
    padding: 5px; ;
}

.input-field.disc-mode {
    width: 200px; /* Adjust the width as needed */
    padding: 5px; ;
}
        .editForm {
              display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #8f8f8f;
    padding: 20px;
    z-index: 1001; /* Ensure the popup is above the blurred background */
    border-radius: 10px;
        }

        .container {
            margin-left: 20%;
        }

        .updateManufacturer {
            background-color: rgba(50, 141, 168) !important;
            color: white !important;
            border: none !important;
            border-radius: 3px !important;
            width: 80px !important;
            height: 30px;
        }

        .closeForm {
            background-color: rgba(50, 141, 168) !important;
            color: white !important;
            border: none !important;
            border-radius: 3px !important;
            width: 80px !important;
            height: 30px;
        }

        button {
            margin: 1px;
        }

        #message {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #ffffff;
            color: black;
            padding: 20px;
            z-index: 1000;
            size: 200px;
            font-weight: 700;
            justify-content: space-between;
            align-content: space-between;
            align-items: center;
            font-size: 14px;
            box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.3) !important;
            border-radius: 8px;
            overflow: hidden;
        }

        form input {
            margin: 2px;
        }

        form button {
            width: 100px !important;
            padding: 5px;
            margin: 5px;
        }

        .col input {
            width: 100%;
        }

        input[type=checkbox] {
            width: 100px;
            color: #8f8f8f !important;
        }
        #submitButton {
    display: none;
} 
    </style>
    <style>
        .align-right-top {
            position: absolute;
            top: 0;
            right: 0;
            margin: 10px;
        }

    </style>
</head>
<body class="g-sidenav-show bg-gray-100">
{{>sidebar}}
<main class="main-content position-relative border-radius-lg">
    {{>navbar}}
    <div class="table-responsive container-fluid py-4">
        <div class="form-control card">
            <div style="display: flex;justify-content: space-between;">
<h3>Sales Retail </h3>
<div class="div" style="align-items: end;">
    <button type="button" class="btn btn-success" id="new">New</button>
    <button class="btn btn-info editmasbtn">Edit</button>
    <button type="button" class="btn btn-danger deletemasBtn">Delete</button>
</div>
            </div>
             
<form id="purchaseDetails" class="form-control" style="display: block; align-item: start;" method="post">
    <div class="row">
        <div class="col-md-4">
    <div class="custom-input-container">
    <select name="Id" class="dropdown" id="Id" >
        <option selected>view details</option>
    </select>
    <label for="purchaseId">Sale Id</label>
    <input type="hidden" name="id" id="id">
</div>
        </div>
        <div class="col-md-4">
            <div class="custom-input-container">
                <input type="date" placeholder=" " name="saledate" id="saledate">
                <label for="saledate">Sale Date</label>
            </div>
        </div>
        <div class="col-md-4">
                <div class="custom-input-container">
                    <input type="text" placeholder=" " name="paymentmode" id="paymentmode">
                    <label for="paymentmode">Payment Mode</label>
                </div>
        </div>
        </div>

    <div style="display: none;">
        <input type="hidden" id="pamount_" name="pamount" value="0.00">
        <input type="hidden" id="pigst_" name="pigst" value="0.00">
        <input type="hidden" id="pcgst_" name="pcgst" value="0.00">
        <input type="hidden" id="psgst_" name="psgst" value="0.00">
        <input type="hidden" id="psubtotal_" name="psubtotal" value="0.00">
        <input type="hidden" id="pcess_" name="pcess" value="0.00">
        <input type="hidden" id="ptcs_" name="ptcs" value="0.00">
        <input type="hidden" id="proundOff_" name="proundOff" value="0.00">
        <input type="hidden" id="pnetAmount_" name="pnetAmount" value="0.00">
        <input type="hidden" id="pdiscount_" name="pdiscount" value="0.00"> 
        <input type="hidden" id="pdiscMode_" name="pdiscMode_"  value="">    
    </div> 
</form>

<div class="custom-input-container">
    <a class="opener" id="openPurchaseForm"><i class="fa-solid fa-folder-plus fa-2x"></i></a>
</div>
                <table id="customerTable"
                       class="table-responsive justify-content-between align-items-end" style="width:100% !important">
                    <thead>
                    <tr>
                        <th>Id</th>
                        <th>Product Name</th>
                        <th>Batch No</th>
                        <th>Tax(%)</th>
                        <th>Quantity</th>
                        <th>UOM</th>
                        <th>Purc.Rate</th>
                        <th>MRP</th>
                        <th>Rate</th>
                        <th>Disc.Mode</th>
                        <th>Disc</th>
                        <th>Amount</th>
                        <th>CGST</th>
                        <th>SGST</th>
                        <th>IGST</th>
                        <th>Total Amount</th>
                        <th class="action">Action</th>
                    </tr>
                    </thead>
                    <tbody>
                    </tbody>       
                </table>
<div class="row">
    <form action="/auth/purchase" method="post" id="purchaseDetails" style="display: contents;">
    <div class="col-2 custom">
        <div class="custom-input-container">
            <select id="pdiscMode" class="dropdown" name="pdiscMode">
                <option selected="disabled">Select Discount Mode</option>
            </select>
            <label for="discMode">discMode</label>
        </div>
    </div>
    <div class="col-2 custom">
        <div class="custom-input-container">
            <input type="text" placeholder=" " name="pdiscount" id="pdiscount">
            <label for="pdiscount">discount</label>
        </div>
    </div>
    </form>
<div class="col d-flex justify-content-end ms-auto">
    <div class="div">
    <button type="submit"   class="btn btn-info updateBtn">Update</button>
    </div>
    <button type="button" id="submitFormBtn" class="btn btn-primary custom-btn add">Submit</button>
</div>


</div>
        
<form id="purchaseDetails" class="form-control" style="display: block; align-item: start;" action="auth/purchase" method="post">
    <div class="row">
    <div class="labels">
        <div class="col">
 <div class="custom">
            <label for="pamount">Amount:</label>
            <span id="pamount" name="pamount">0.00</span>
        </div>

        <div class="custom">
            <label for="pigst">IGST:</label>
            <span id="pigst" name="pigts">0.00</span>
        </div>
        </div>
       
<div class="col">
   <div class="custom">
            <label for="pcgst">CGST:</label>
            <span id="pcgst" name="pcgst">0.00</span>
        </div>

        <div class="custom">
            <label for="psgst">SGST:</label>    
            <span id="psgst" name="psgst">0.00</span>
        </div>
</div>
     <div class="col">
   <div class="custom">
            <label for="psubtotal">Sub Total:</label>
            <span id="psubtotal" name="psubtotal">0.00</span>
        </div>

        <div class="custom">
            <label for="pcess">CESS:</label>
            <span id="pcess" name="pcess">0.00</span>
        </div>
     </div>

     <div class="col">
        <div class="custom">
            <label for="ptcs">TCS:</label>
            <span id="ptcs" name="ptcs">0.00</span>
        </div>
        <div class="custom">
            <label for="proundOff">Round Off:</label>
            <span id="proundOff" name="proundOff">0.00</span>
        </div>
     </div>
{{!-- <div class="col">
 <div class="custom">
   <label for="pnetAmount">Net Amount:</label>
   <span id="pnetAmount" name="pnetAmount">0.00</span>
</div>
</div> --}}
 </div>
 </div>
<div id="overlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); z-index: 1000; overflow: auto;">
    <div id="batchform" style="display: none; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: white; padding: 20px; border: 1px solid #ccc; max-height: 200px; overflow-y: auto;">
        <table id="batchDetailsTable" border="1px" class="table">
            <thead>
                <tr>
                    <th>Batch No</th>
                    <th>Tax</th>
                    <th>Quantity</th>
                    <th>UOM</th>
                    <th>Rate</th>
                </tr>
            </thead>
            <tbody id="batchDetailsBody"></tbody>
        </table>
        <a class="closebatch" style="position: absolute; top: 5px; right: 5px;"><i class="fa-solid fa-circle-xmark"></i></a>
    </div>
</div>

</form>
 </div>
          <div id="selectedRowDetails"></div>

</div>

        {{>footer}}
    </div>
</main>
{{>color}}

<script>

$(document).ready(function() {
    // Attach click event listener to the closebatch link
    $('.closebatch').on('click', function() {
        // Hide the overlay and batchform
        $('#overlay').hide();
        $('#batchform').hide();
    });
});

$(document).ready(function() {
    $.ajax({
        url: '/auth/purchase/discmode',
        method: 'GET',
        dataType: 'json',
        success: function (response) {
            console.log('Received response for discmode options:', response);
            var options = response.data;

            if (options && options.length) {
               
                var discModeDropdown = $('#pdiscMode');
 
                discModeDropdown.find('option').remove();

                discModeDropdown.append($('<option>', {
                    selected: 'selected',
                    disabled: 'disabled',
                    text: 'Select Disc Mode'
                }));
               options.forEach(function(option) {
    discModeDropdown.append($('<option>', {
        value: option.id,
        text: option.discMode  // Display the discMode name
    }));
});
                console.log('Dropdown values:', discModeDropdown.val());
            } else {
                console.error('No options found for discmode');
            }
        },
        error: function (xhr, status, error) {
            console.error('Error fetching discmode options:', error);
        }
    });
});

$(document).on('click', '.editmasbtn', function() {
    alert("IF YOU GONNA EDIT IN QUANTITY OF salesretail PRODUCT,DELETE THE TRANSACTION AND ADD  CORRECT QUANTITY.");
   $('.opener').show();
    $('#customerTable tbody tr').each(function() {
        var row = $(this);
        var id = row.find('td:eq(0)').text();
        var product = row.find('td:eq(1)').text();
        var batchNo = row.find('td:eq(2)').text();
        var tax = row.find('td:eq(3)').text();
        var quantity = row.find('td:eq(4)').text();
        var uom = row.find('td:eq(5)').text();
        var purcRate = row.find('td:eq(6)').text();
         var mrp = row.find('td:eq(7)').text();
        var rate = row.find('td:eq(8)').text();
        var discMode = row.find('td:eq(9)').text();
        var discount = row.find('td:eq(10)').text();
        var amount = row.find('td:eq(11)').text();
        var cgst = row.find('td:eq(12)').text();
        var sgst = row.find('td:eq(13)').text();
        var igst = row.find('td:eq(14)').text();
        var totalAmount = row.find('td:eq(15)').text();
        
    row.html("<td><input type='number' readonly name='Id' class='input-field  purchase-id' value='" + id + "'></td>" +
    "<td><select name='product' class='input-field product-name dropdown' id='productname_" + id + "'><option selected disabled>Select product</option></select></td>" +
    "<td><input type='text' name='batchNo' class='input-field' value='" + batchNo + "'></td>" +
    "<td><input type='text' name='tax' class='input-field' value='" + tax + "'></td>" +
    "<td><input type='number' name='quantity' class='input-field' value='" + quantity + "'></td>" +
    "<td><input type='text' name='uom' class='input-field' value='" + uom + "'></td>" +
     "<td><input type='number' name='purcRate' class='input-field' value='" + purcRate + "'></td>" +
      "<td><input type='number' name='mrp' class='input-field' value='" + mrp + "'></td>" +
    "<td><input type='number' name='rate' class='input-field' value='" + rate + "'></td>" +
    "<td><select name='discMode' class='input-field disc-mode dropdown' id='discMode_" + id + "'><option selected disabled>Select Disc Mode</option></select></td>" +
    "<td><input type='number' name='discount' class='input-field' value='" + discount + "'></td>" +
    "<td><input type='number' name='amount' class='input-field' value='" + amount + "'></td>" +
    "<td><input type='number' name='cgst' class='input-field' value='" + cgst + "'></td>" +
    "<td><input type='number' name='sgst' class='input-field' value='" + sgst + "'></td>" +
    "<td><input type='number' name='igst' class='input-field' value='" + igst + "'></td>" +
    "<td><input type='number' name='totalAmount' class='input-field' value='" + totalAmount + "'></td>" +
    "<td><i class='fa-solid fa-trash deletetransBtn' type='button' data-id='" + id + "'></i></td>");

    
        fetchProductOptions(id, product); 
        fetchDiscModeOptions(id, discMode); 
    });

    calculateTotals();
    adjustColumnWidths();    
});
function adjustColumnWidths() {
    $('#customerTable').DataTable().columns.adjust().draw();
}

$(document).on('click', '.deletetransBtn', function() {
    var row = $(this).closest('tr');
    var id = row.find('.purchase-id').val();
    if (!confirm('Are you sure you want to delete this row?')) {
        return; 
    }
    $.ajax({
        type: 'DELETE',
        url: `/auth/salesretailtransdelete/${id}`,
        success: function(response) {
            if (response.success) {
                  table.row(row).remove().draw(false);
                calculateTotals(); 
                alert('Row deleted successfully');
            } else {
                alert('Failed to delete row: ' + response.message);
            }
        },
        error: function(xhr, status, error) {
            console.error('Error deleting row:', error);
            alert('An error occurred while deleting the row.');
        }
    });
});

$(document).ready(function() {
    $(document).on('click', '.updateBtn', function(event) {
        event.preventDefault();

        var purchaseId = $('input[name="id"]').val();
        if (!purchaseId) {
            console.error('No purchase ID entered.');
            alert('No purchase ID entered. Please enter a purchase ID to update.');
            return;
        }

        var purchaseDetails = {
            id: $('#id').val(),
            saledate: $('#saledate').val(),
            paymentmode: $('#paymentmode').val(),
            pamount: parseFloat($('#pamount_').val()),
            pigst: parseFloat($('#pigst_').val()),
            pcgst: parseFloat($('#pcgst_').val()),
            psgst: parseFloat($('#psgst_').val()),
            psubtotal: parseFloat($('#psubtotal_').val()),
            pcess: parseFloat($('#pcess_').val()),
            ptcs: parseFloat($('#ptcs_').val()),
            proundOff: parseFloat($('#proundOff_').val()),
            pnetAmount: parseFloat($('#pnetAmount_').val()),
            pdiscMode_: parseFloat($('#pdiscMode_').val()), // Make sure this ID matches the discount mode field ID in the HTML
            pdiscount: parseFloat($('#pdiscount_').val()) // Make sure this ID matches the discount field ID in the HTML
        };

        console.log('Purchase Details:', purchaseDetails);

        var payload = {
            purchaseId: purchaseId,
            purchaseDetails: purchaseDetails,
            products: getUpdatedProductsData()
        };

        console.log('Payload:', payload);

        $.ajax({
            type: 'PUT',
            url: '/auth/salesEdit/' + purchaseId,
            contentType: 'application/json',
            data: JSON.stringify(payload),
            success: function(response) {
                console.log(response);
                if (response.success) {
                    alert('Successfully updated');
                    window.location.href = "/salesretail";
                } else {
                    alert("Failed to update purchase: " + response.message);
                }
            },
            error: function(xhr, status, error) {
                console.error('Error updating purchase:', error);
                alert("Failed to update purchase. Check console for details.");
            }
        });
    });
});

function getUpdatedProductsData() {
    var products = [];

    $('#customerTable tbody tr').each(function () {
        try {
            var Id = $(this).find('.purchase-id').val();
            var product = $(this).find('.product-name').val();
            var batchNo = $(this).find('[name="batchNo"]').val(); 
            var tax = $(this).find('[name="tax"]').val();
            var quantity = $(this).find('[name="quantity"]').val();
            var uom = $(this).find('[name="uom"]').val();
            var purcRate = $(this).find('[name="purcRate"]').val();
               var mrp = $(this).find('[name="mrp"]').val();
            var rate = $(this).find('[name="rate"]').val();
            var discMode = $(this).find('[name="discMode"]').val();
            var discount = $(this).find('[name="discount"]').val();
            var amount = $(this).find('[name="amount"]').val();
            var cgst = $(this).find('[name="cgst"]').val();
            var sgst = $(this).find('[name="sgst"]').val();
            var igst = $(this).find('[name="igst"]').val();
            var totalAmount = $(this).find('[name="totalAmount"]').val();

            var product = {
                Id: Id,
                productId: product,
                batchNo: batchNo,
                tax: tax,
                quantity: quantity,
                uom: uom,
                purcRate: purcRate,
                 mrp: mrp,
                rate: rate,
                discMode: discMode,
                discount: discount,
                amount: amount,
                cgst: cgst,
                sgst: sgst,
                igst: igst,
                totalAmount: totalAmount
            };

            products.push(product);
        } catch (error) {
            console.error('Error processing row:', this);
            console.error('Error details:', error);
        }
    });

    return products;
}

function fetchProductOptions(id, product) {
    $.ajax({
        url: '/auth/purchase/productname',
        method: 'GET',
        success: function(response) {
            console.log('Product Options:', response); // Check response in console
            // Populate the product dropdown with response.data and select the matching product name
            populateDropdown('#productname_' + id, response.data, product);
        },
        error: function(xhr, status, error) {
            console.error('Error fetching product options:', error);
        }
    });
}

function fetchDiscModeOptions(id, discModeData) {
    $.ajax({
        url: '/auth/purchase/discmode',
        method: 'GET',
        success: function(response) {
            console.log('Disc Mode Options:', response); // Check response in console
            populateDropdown('#discMode_' + id, response.data, discModeData);
        },
        error: function(xhr, status, error) {
            console.error('Error fetching discMode options:', error);
        }
    });
}

function populateDropdown(selector, options, selectedOption) {
    var dropdown = $(selector);
    dropdown.empty();
    // Add default option
    dropdown.append($('<option>').text('Select').attr('value', ''));
    options.forEach(function(option) {
        if (typeof option === 'object') {
            var productName = option.productname ? option.productname.trim() : '';
            var discMode = option.discMode ? option.discMode.trim() : '';
            var optionText = (productName && discMode) ? productName + ' (' + discMode + ')' : productName || discMode || '';
            var optionValue = option.id;
            var isSelected = optionText === selectedOption; // Check if the option matches the selected option
            dropdown.append($('<option>').text(optionText).attr('value', optionValue).prop('selected', isSelected));
        } else {
            dropdown.append($('<option>').text(option).attr('value', option));
        }
    });
}

$(document).ready(function() {
    $(document).on('click', '.deletemasBtn', function() {
        var id = getSelectedPurchaseId();
        var deleteUrl = '/auth/salesdelete/' + id; 
        $.ajax({
            type: 'DELETE',
            url: deleteUrl,
            success: function(response) {
                console.log(response);
                if (response.success) {
                    alert('Successfully Deleted 🗑');
                   window.location.href = "/salesretail";
                } else {
                    alert("Failed to delete purchase: " + response.error);
                }
            },
            error: function(error) {
                console.error('Error deleting purchase:', error);
                alert("Failed to delete purchase. Check console for details.");
            }
        });
    }); 
    function getSelectedPurchaseId() {
        var selectedOption = $('.dropdown[name="Id"] option:selected');
        if (!selectedOption || !selectedOption.val()) {
            console.error('No purchase option selected');
            return null;
        }
        try {
            var rowDetails = JSON.parse(selectedOption.val());
            return rowDetails.id;
        } catch (error) {
            console.error('Error parsing JSON:', error);
            return null;
        }
    }
});

$(document).ready(function () {
    $('.div').hide();
    $('.add').show();
    $('.dropdown[name="Id"]').change(function () {
        var selectedOption = $(this).find('option:selected');
        if (selectedOption.val() && selectedOption.val() !== 'view details') {
            $('.div').show();
            $('.opener').hide();
            $('.add').hide();
        } else {
            $('.div').hide();
            $('.add').show();
        }
    });
});

$(document).ready(function () {
        // Initialize DataTable
        let table = $('#customerTable').DataTable();
        let products = [];
        let uniqueId = generateUniqueId();

        calculateTotals();

        // Open Purchase Form and Add New Row
        $('#openPurchaseForm').on('click', function () {
            let purchaseId = generateUniqueId();
            $('#purchaseId').val(purchaseId);

            uniqueId = generateUniqueId();
            let newRow = $("<tr data-uniqueId='" + uniqueId + "'>" +
                "<td><input type='hidden' name='purchaseId' class='input-field purchase-id' value='" + purchaseId + "'></td>" +
                "<td><select name='productname' class='input-field product-name dropdown' id='productname_" + uniqueId + "' placeholder='Product Name'><option selected disabled>Select product</option></select></td>" +
                "<td><input type='text' name='batchNo' class='input-field' id='batchNo_" + uniqueId + "' placeholder='Batch No'></td>" +
                "<td><input type='text' name='tax' class='input-field' id='tax_" + uniqueId + "' placeholder='Tax(%)'></td>" +
                "<td><input type='number' name='quantity' class='input-field' id='quantity_" + uniqueId + "' placeholder='Quantity'></td>" +
                "<td><input type='text' name='uom' class='input-field' id='uom_" + uniqueId + "' placeholder='UOM'></td>" +
                "<td><input type='number' name='purcRate' class='input-field' id='purcRate_" + uniqueId + "' placeholder='purcRate'></td>" +
                "<td><input type='number' name='mrp' class='input-field' id='mrp_" + uniqueId + "' placeholder='MRP'></td>" +
                "<td><input type='number' name='rate' class='input-field' id='rate_" + uniqueId + "' placeholder='Rate'></td>" +
                "<td><select name='discMode' class='input-field product-name dropdown' id='discMode_" + uniqueId + "' placeholder='Disc.Mode'><option selected disabled>Select Disc Mode</option></select></td>" +
                "<td><input type='number' name='discount' class='input-field' id='discount_" + uniqueId + "' placeholder='Discount'></td>" +
                "<td><input type='number' name='amount' class='input-field' id='amount_" + uniqueId + "' placeholder='Amount'></td>" +
                "<td><input type='number' name='cgst' class='input-field' id='cgst_" + uniqueId + "' placeholder='CGST'></td>" +
                "<td><input type='number' name='sgst' class='input-field' id='sgst_" + uniqueId + "' placeholder='SGST'></td>" +
                "<td><input type='number' name='igst' class='input-field' id='igst_" + uniqueId + "' placeholder='IGST'></td>" +
                "<td><input type='number' name='totalAmount' class='input-field' id='totalAmount_" + uniqueId + "' placeholder='Total Amount'></td>" +
                "<td class='action new-row'><button class='btn btn-danger deleteRowBtn'>Delete Row</button></td>" +
                "</tr>");

            $('#customerTable tbody').append(newRow);
            table.rows.add([newRow[0]]).draw();

            // Fetch product options and populate the product dropdown
            $.ajax({
                url: '/auth/purchase/productname',
                method: 'GET',
                success: function (response) {
                    var options = response.data;
                    if (options && options.length) {
                        options.forEach(function (option) {
                            $('#productname_' + uniqueId).append($('<option>', {
                                value: option.id,
                                text: option.productname
                            }));
                        });

                        $('#productname_' + uniqueId).on('change', function () {
                            var selectedProductId = $(this).val();
                            var selectedProduct = options.find(function (product) {
                                return product.id == selectedProductId;
                            });

                            if (selectedProduct) {
                                fetchBatchDetails(selectedProductId, uniqueId);
                            }
                        });

                        fetchDiscmodeOptions(uniqueId);
                    } else {
                        console.error('No options found for product name');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching options for product name:', error);
                }
            });
        });

        // Delete Row
        $('#customerTable tbody').on('click', 'button.deleteRowBtn', function () {
            let row = $(this).closest("tr");
            if (row) {
                table.row(row).remove().draw(false);
                calculateTotals();
            }
        });

        // Submit Form
        $('#submitFormBtn').on('click', function () {
            let formData = $('#purchaseDetails').serializeArray();
            products = getProductsData();

            formData.push({ name: 'products', value: JSON.stringify(products) });

            $.ajax({
                url: '/auth/salesretail',
                method: 'POST',
                data: formData,
                success: function (response) {
                    location.reload();
                    alert('Successfully Submitted purchase');
                },
                error: function (error) {
                    console.error("Error submitting form:", error);
                }
            });
        });

        // Get Product Data
        function getProductsData() {
            var products = [];

            $('#customerTable tbody tr').each(function () {
                var uniqueId = $(this).find('select[name="productname"]').attr('id');
                if (uniqueId) {
                    uniqueId = uniqueId.split('_')[1];

                    var product = {
                        purchaseId: $(this).find('.purchase-id').val(),
                        productId: $('#productname_' + uniqueId).val() || "",
                        batchNo: $('#batchNo_' + uniqueId).val() || "",
                        tax: parseFloat($('#tax_' + uniqueId).val()) || 0,
                        quantity: parseFloat($('#quantity_' + uniqueId).val()) || 0,
                        uom: $('#uom_' + uniqueId).val() || "",
                        purcRate: parseFloat($('#purcRate_' + uniqueId).val()) || 0,
                        mrp: parseFloat($('#mrp_' + uniqueId).val()) || 0,
                        rate: parseFloat($('#rate_' + uniqueId).val()) || 0,
                        discMode: $('#discMode_' + uniqueId).val() || "",
                        discount: parseFloat($('#discount_' + uniqueId).val()) || 0,
                        amount: parseFloat($('#amount_' + uniqueId).val()) || 0,
                        cgst: parseFloat($('#cgst_' + uniqueId).val()) || 0,
                        sgst: parseFloat($('#sgst_' + uniqueId).val()) || 0,
                        igst: parseFloat($('#igst_' + uniqueId).val()) || 0,
                        totalAmount: parseFloat($('#totalAmount_' + uniqueId).val()) || 0
                    };
                    products.push(product);
                }
            });

            return products;
        }

        // Fetch Batch Details
        function fetchBatchDetails(selectedProductId, uniqueId) {
            var requestData = {
                selectedProductId: selectedProductId
            };

            $.ajax({
                url: '/auth/salesretail/batchDetails/' + selectedProductId,
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(requestData),
                success: function (response) {
                    if (response.success) {
                        $('#batchDetailsBody').empty();
                        response.data.forEach(function (batch) {
                            $('#batchDetailsBody').append(
                                `<tr data-uniqueId="${uniqueId}" data-batchNo="${batch.batchNo}" data-tax="${batch.tax}" data-quantity="${batch.quantity}" data-uom="${batch.uom}" data-rate="${batch.rate}">
                                <td>${batch.batchNo}</td>
                                <td>${batch.tax}</td>
                                <td>${batch.op_quantity}</td>
                                <td>${batch.uom}</td>
                                <td>${batch.rate}</td>
                            </tr>`
                            );
                        });
                        $('#overlay').show();
                        $('#batchform').show();
                    } else {
                        console.error('No batch details found for the selected product');
                    }
                },
                error: function (xhr, status, error) {
                    $('#batchDetailsBody').empty();
                    $('#batchDetailsBody').append(
                        `<tr>
                        <td colspan="5">Error fetching batch details: ${error}</td>
                    </tr>`
                    );
                    $('#overlay').show();
                    $('#batchform').show();
                }
            });
        }

        // Select Batch Detail Row
        $('#batchDetailsBody').on('click', 'tr', function () {
            var uniqueId = $(this).attr('data-uniqueId');

            var selectedBatchNo = $(this).attr('data-batchNo');
            var selectedTax = $(this).attr('data-tax');
            var selectedQuantity = $(this).attr('data-quantity');
            var selectedUom = $(this).attr('data-uom');
            var selectedRate = $(this).attr('data-rate');

            $('#batchNo_' + uniqueId).val(selectedBatchNo);
            $('#tax_' + uniqueId).val(selectedTax);
            $('#quantity_' + uniqueId).val(selectedQuantity);
            $('#uom_' + uniqueId).val(selectedUom);
            $('#purcRate_' + uniqueId).val(selectedRate);

            $('#overlay').hide();
            $('#batchform').hide();
            calculateTotals();
        });

        // Close Batch Form
        $('#closeBatchForm').on('click', function () {
            $('#overlay').hide();
            $('#batchform').hide();
        });

        // Fetch Discount Mode Options
        function fetchDiscmodeOptions(uniqueId) {
            $.ajax({
                url: '/auth/purchase/discmode',
                method: 'GET',
                success: function (response) {
                    var discmodeOptions = response.data;
                    if (discmodeOptions && discmodeOptions.length) {
                        discmodeOptions.forEach(function (option) {
                            $('#discMode_' + uniqueId).append($('<option>', {
                                value: option.id,
                                text: option.discMode
                            }));
                        });
                    } else {
                        console.error('No options found for discount mode');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching options for discount mode:', error);
                }
            });
        }

        // Calculate Totals
        function calculateTotals() {
            var totalAmount = 0;
            var totalQuantity = 0;

            $('#customerTable tbody tr').each(function () {
                var quantity = parseFloat($(this).find('input[name="quantity"]').val()) || 0;
                var rate = parseFloat($(this).find('input[name="rate"]').val()) || 0;
                var discount = parseFloat($(this).find('input[name="discount"]').val()) || 0;
                var amount = quantity * rate - discount;

                $(this).find('input[name="amount"]').val(amount.toFixed(2));

                var tax = parseFloat($(this).find('input[name="tax"]').val()) || 0;
                var cgst = amount * (tax / 2) / 100;
                var sgst = amount * (tax / 2) / 100;
                var igst = amount * tax / 100;
                var totalAmountRow = amount + cgst + sgst + igst;

                $(this).find('input[name="cgst"]').val(cgst.toFixed(2));
                $(this).find('input[name="sgst"]').val(sgst.toFixed(2));
                $(this).find('input[name="igst"]').val(igst.toFixed(2));
                $(this).find('input[name="totalAmount"]').val(totalAmountRow.toFixed(2));

                totalAmount += totalAmountRow;
                totalQuantity += quantity;
            });

            $('#totalAmount').text(totalAmount.toFixed(2));
            $('#totalQuantity').text(totalQuantity.toFixed(2));
        }

        // Generate Unique ID
        function generateUniqueId() {
            return Math.floor(Math.random() * 1000000);
        }
    });


function fetchDiscmodeOptions(uniqueId) {
    $.ajax({
        url: '/auth/purchase/discmode',
        method: 'GET',
        dataType: 'json',
        success: function (response) {
            console.log('Received response for discmode options:', response);
            var options = response.data;

            if (options && options.length) {
               
                var discModeDropdown = $('#discMode_' + uniqueId);
 
                discModeDropdown.find('option').remove();

                discModeDropdown.append($('<option>', {
                    selected: 'selected',
                    disabled: 'disabled',
                    text: 'Select Disc Mode'
                }));
                options.forEach(function (option) {
                    discModeDropdown.append($('<option>', {
                        value: option.id,
                        text: option.discMode
                    }));
                });

                console.log('Dropdown values:', discModeDropdown.val());
            } else {
                console.error('No options found for discmode');
            }
        },
        error: function (xhr, status, error) {
            console.error('Error fetching discmode options:', error);
        }
    });

}

function calculateTotals() {
    let totalAmount = 0;
    let totalCGST = 0;
    let totalSGST = 0;
    let totalIGST = 0;

    let totalNetAmount = parseFloat($('#supplierinvoiceamount').val()) || 0;

    $('#customerTable tbody tr').each(function () {
        let row = $(this);
        let amount = parseFloat(row.find('input[name="amount"]').val()) || 0;
        let cgst = parseFloat(row.find('input[name="cgst"]').val()) || 0;
        let sgst = parseFloat(row.find('input[name="sgst"]').val()) || 0;
        let igst = parseFloat(row.find('input[name="igst"]').val()) || 0;

        totalAmount += amount;
        totalCGST += cgst;
        totalSGST += sgst;
        totalIGST += igst;
    });

    let totalTax = totalCGST + totalSGST + totalIGST;

    $('#pamount').text(totalAmount.toFixed(2));
    $('#pcgst').text(totalCGST.toFixed(2));
    $('#psgst').text(totalSGST.toFixed(2));
    $('#pigst').text(totalIGST.toFixed(2));
    $('#pnetAmount').text(totalNetAmount.toFixed(2));
    $('#psubtotal').text((totalAmount + totalTax).toFixed(2));

    $('#pamount_').val(totalAmount.toFixed(2));
    $('#pcgst_').val(totalCGST.toFixed(2));
    $('#psgst_').val(totalSGST.toFixed(2));
    $('#pigst_').val(totalIGST.toFixed(2));
    $('#pnetAmount_').val(totalNetAmount.toFixed(2));
    $('#psubtotal_').val((totalAmount + totalTax).toFixed(2));

    let subtotal = parseFloat($('#psubtotal').text()) || 0;
    let netAmount = parseFloat($('#pnetAmount').text()) || 0;

    var discMode = $('#pdiscMode').val();
    var discount = parseFloat($('#pdiscount').val()) || 0; 

    if (isNaN(discount)) {
        discount = 0; 
    }

    if (discMode === 'N/A' || discMode === '3') {
        discount = 0; 
        $('#pdiscount').val('0'); 
    } else if (discMode === 'percentage' || discMode === '1') {
        discount = (subtotal * discount) / 100;
    }

    subtotal -= discount;

    let roundOff = netAmount - subtotal;

    $('#psubtotal').text(subtotal.toFixed(2));

    $('#psubtotal_').val(subtotal.toFixed(2));

    $('#proundOff').text(roundOff.toFixed(2));
    $('#proundOff_').val(roundOff.toFixed(2));

    var discModeId = $('#pdiscMode').val();
    $('#pdiscMode_').val(discModeId);
    $('#pdiscount_').val($('#pdiscount').val());
}

$('#pdiscMode, #pdiscount').change(function() {
    calculateTotals();
});
    
        $(document).on('click', '#addmanufacturer', function() {
        $("#manufacturerform").show();
        $("#id").val('');
    });
    
    var table = $("#customerTable").DataTable({
        searching: false,
        paging: false,
        scrollY: '200px',
        scrollX: true,
        columns: [
        { data: 'Id' },
        { data: 'product' },
        { data: 'batchNo' },
        { data: 'tax' },
        { data: 'quantity' },
        { data: 'uom' },  
        { data: 'purcRate' },
         { data: 'mrp' },
        { data: 'rate' },
        { data: 'discMode'},
        { data: 'discount' },
        { data: 'amount' },
        { data: 'cgst' },
        { data: 'sgst' },
        { data: 'igst' },
        { data: 'totalAmount' },
       {
            data: 'Id',
            render: function (data) {
                return '<i class="fa-solid fa-trash div deletetransBtn" type="button" data-id="' + data + '"></i>';
            }
       }
    ],
        scrollCollapse: false,
        responsive: true,
        bInfo: true,
        bBorders: true,
      fixedColumns: {
            leftColumns: 1
        }
    });
    $('#purchaseId').on('change', function () {
        var selectedPurchaseId = $(this).val();
       table.ajax.url('/auth/salesretail/productid?purchaseId=' + selectedPurchaseId).load();
    });
if (table.data().count() === 0) {
    console.log("No data available in table");
}
        if (table.rows().count() === 0) {
            $("#emptyMessage").show();
        }
    $(document).ready(function () {
        var companyState;
        var totalAmount = 0;

        $('#customerTable tbody').on('input', 'input[name^="rate"], input[name^="quantity"], select[name^="discMode"], input[name^="discount"]', function () {
            var row = $(this).closest('tr');
            var rate = parseInt(row.find('input[name^="rate"]').val()) || 0;
            var quantity = parseInt(row.find('input[name^="quantity"]').val()) || 0;
            var discMode = row.find('select[name^="discMode"]').val();
            var discountInput = row.find('input[name^="discount"]');

            if (discMode === '3') {
                discountInput.val('0');
            }

            var discount = parseInt(discountInput.val()) || 0;
            var amount = calculateAmount(rate, quantity, discMode, discount);

            row.find('input[name^="amount"]').val(amount.toFixed(2));

            calculateTax(row);
            calculateTotalAmount();
        });

        function calculateTotalAmount() {
            $('#customerTable tbody tr').each(function () {
                var row = $(this);
                var amount = parseFloat(row.find('input[name^="amount"]').val()) || 0;
                var cgst = parseFloat(row.find('input[name^="cgst"]').val()) || 0;
                var sgst = parseFloat(row.find('input[name^="sgst"]').val()) || 0;
                var igst = parseFloat(row.find('input[name^="igst"]').val()) || 0;

                var totalTax = cgst + sgst + igst;
                var rowTotalAmount = amount + totalTax;
                row.find('input[name^="totalAmount"]').val(rowTotalAmount.toFixed(2));
            });
        }

        function calculateAmount(rate, quantity, discMode, discount) {
            var calculatedAmount = 0;

            if (discMode === 'N/A' || discMode === '3') {
                discount = 0;
                calculatedAmount = rate * quantity - discount;
            } else if (discMode === 'percentage' || discMode === '1') {
                calculatedAmount = rate * quantity * (1 - discount / 100);
            } else {
                calculatedAmount = rate * quantity - discount;
            }

            return calculatedAmount;
        }

        function calculateTax(row) {
            var amount = parseFloat(row.find('input[name^="amount"]').val()) || 0;
            var taxRate = parseFloat(row.find('input[name^="tax"]').val()) || 0;

            var cgst = (amount * taxRate / 200).toFixed(2);
            var sgst = cgst;
            var igst = 0;

            var totalTax = (parseFloat(cgst) + parseFloat(sgst) + parseFloat(igst)).toFixed(2);

            row.find('input[name^="cgst"]').val(cgst);
            row.find('input[name^="sgst"]').val(sgst);
            row.find('input[name^="igst"]').val(igst);
            row.find('input[name^="totalTax"]').val(totalTax);

            calculateTotalAmount();
        }

        function fetchCompanyState() {
            $.ajax({
                url: '/auth/purchase/companystate',
                method: 'GET',
                success: function (response) {
                    companyState = response.data[0].state;
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching Company State:', error);
                }
            });
        }

        function fetchSupplierNames() {
            $.ajax({
                url: '/auth/salesretail/customername',
                method: 'GET',
                success: function (response) {
                    var options = response.data;
                    if (options && options.length) {
                        options.forEach(function (option) {
                            var $option = $('<option>', {
                                value: option.id,
                                text: option.ledgername,
                                'data-mobile': option.mobile
                            });
                            $('.dropdown[name="customername"]').append($option);
                        });
                        $('.dropdown[name="customername"]').change();
                    } else {
                        console.error('No options found for Customer Name');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching options for Customer Name:', error);
                }
            });
        }

        $('.dropdown[name="customername"]').change(function () {
            var selectedMobile = $(this).find(':selected').data('mobile');
            $('#customermobileno').val(selectedMobile).show();
        });

        fetchCompanyState();
        fetchSupplierNames();
    });

    function updateCustomerTable(data) {
        var table = $('#customerTable').DataTable();
        table.clear().rows.add(data).draw();
    }


function updateCustomerTable(data) {
    var table = $('#customerTable').DataTable();
    table.clear().rows.add(data).draw();
}

function formatDate(dateObject) {
    const date = new Date(dateObject);
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');  
    const day = String(date.getDate()).padStart(2, '0');
    return `${year}-${month}-${day}`;
}

$(document).ready(function() {
    $('#new').click(function() {
       window.location.href = '/salesretail'
    });
});



</script>

</body>      
</html>
